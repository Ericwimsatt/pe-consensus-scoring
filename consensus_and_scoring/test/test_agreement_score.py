import sys
import os
import pandas as pd

import test_utils
from filegen_utils import *
from IAA import *
from Dependency import *
import conftest

#REFERENCE: in Evidence, parents = {1.1:[2], 1.2:[2], 2.1:[4], 2.5:[4,5], 2.8:[3], 5.1:[6], 5.2:[6], 5.3:[6], 9.1:[10,11], 9.2:[10,11]}
def test_sample(config):
    test_path = test_utils.make_test_directory(config, 'test_agscore')
    iaa_files_path = test_utils.make_test_directory(config, 'test_agscore_iaa')
    out_path = test_utils.make_test_directory(config, 'test_agscore_out')
    #source_task_id generated by smashing keyboard
    dh = datahunt(out_folder=test_path, source_task_id = 'oogabooga')

    dh.add_row({'answer_label': 'T1.Q1.A1', 'namespace': 'Covid_Evidence2020_03_21', 'contributor_uuid':'A', 'highlight_count':3, 'start_pos':1, 'end_pos':10, 'article_text_length': 100})
    dh.add_row({'answer_label': 'T1.Q1.A1', 'namespace': 'Covid_Evidence2020_03_21', 'contributor_uuid':'B', 'highlight_count':3, 'start_pos':1, 'end_pos':10, 'article_text_length': 100})
    dh.add_row({'answer_label': 'T1.Q1.A2', 'namespace': 'Covid_Evidence2020_03_21', 'contributor_uuid':'C', 'highlight_count':3, 'start_pos':1, 'end_pos':10, 'article_text_length': 100})
    dh.add_row({'answer_label': 'T1.Q1.A2', 'namespace': 'Covid_Evidence2020_03_21', 'contributor_uuid':'D', 'highlight_count':3, 'start_pos':1, 'end_pos':10, 'article_text_length': 100})
    dh.add_row({'answer_label': 'T1.Q2.A2', 'namespace': 'Covid_Evidence2020_03_21', 'contributor_uuid':'D', 'highlight_count':3, 'start_pos':1, 'end_pos':10, 'article_text_length': 100})

    fin_path = dh.export()
    data_path = config['data_dir']
    schema_path = data_path+'/schemas'

    iaa_out = calc_agreement_directory(test_path, schema_path, config['IAA_config_dir'], test_utils.texts_dir, outDirectory = iaa_files_path)

    eval_dependency(test_path, iaa_files_path, schema_path, out_path)

    for root, dir, files in os.walk(out_path):
        for file in files:
            #should be only 1 file for this case, so just run it on the only one
            # if there's more than 1 then you can get fancy
            out_df  = pd.read_csv(os.path.join(out_path, file), encoding='utf-8')
