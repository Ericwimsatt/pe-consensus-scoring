import sys
import os
import pandas as pd

import test_utils
from filegen_utils import *
from Dependency import *
import conftest

#REFERENCE: in Evidence, parents = {1.1:[2], 1.2:[2], 2.1:[4], 2.5:[4,5], 2.8:[3], 5.1:[6], 5.2:[6], 5.3:[6], 9.1:[10,11], 9.2:[10,11]}
def test_dep_sample(config):
    iaa_files_path = test_utils.make_test_directory(config, 'dep_sample')
    out_path = test_utils.make_test_directory(config, 'out_dep_sample')
    # source_task_id generated by smashing keyboard
    iaa = IAA_task(out_folder=iaa_files_path, source_task_id='kjncsa87nxao21899102j1j2')
    iaa.add_row({"namespace": "Covid_Evidence2020_03_21", "question_Number": 1, "agreed_Answer": 1,  "agreement_score": .75})
    iaa.add_row({"namespace": "Covid_Evidence2020_03_21", "question_Number": 1, "agreed_Answer": 1,  "agreement_score": .75})
    iaa.add_row({"namespace": "Covid_Evidence2020_03_21", "question_Number": 1, "agreed_Answer": 1,  "agreement_score": .75})
    fin_path = iaa.export()
    data_path = config['data_dir']
    schema_path = data_path + '/schemas'
    dh_path = None #doesn't get used by dependency but is still an argument

    eval_dependency(dh_path, iaa_files_path, schema_path, out_path)

    for root, dir, files in os.walk(out_path):
        for file in files:
            #should be only 1 file for this case, so just run it on the only one
            # if there's more than 1 then you can get fancy
            out_df  = pd.read_csv(os.path.join(out_path, file), encoding='utf-8')
    #9 answer choices to a checklist question
    # assert len(out_df) == 2
    # q_three = out_df[out_df['question_Number']==2]
    # hl = q_three['highlighted_indices'].iloc[0]
    # assert len(hl) >18
    # assert '10' in hl
    # assert '29' in hl
